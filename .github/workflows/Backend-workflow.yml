name: Build and Push Docker Image

on:
  push:
    branches:
      - 10.x

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS Credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}

    - name: Create ECR Login Token
      id: ecr-login
      run: echo "::set-output name=token::$(aws ecr get-login-password --region ${{ secrets.AWS_REGION }})"

    - name: Docker Login to ECR
      run: echo ${{ steps.ecr-login.outputs.token }} | docker login --username AWS --password-stdin 732373470123.dkr.ecr.us-east-1.amazonaws.com
        
    - name: Build Docker Image
      run: docker build -t laravel-img:latest -f ./Dockerfile .
        
    - name: Tag Docker Image for ECR
      run: docker tag laravel-img:latest 732373470123.dkr.ecr.us-east-1.amazonaws.com/laravel:latest

    - name: Push Docker Image to ECR
      run: docker push 732373470123.dkr.ecr.us-east-1.amazonaws.com/laravel:latest

    - name: Save Private Key
      run: echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
  
    - name: Set Permissions for Private Key
      run: chmod 600 private_key.pem 

    - name: Deploy to EC2
      run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            sudo docker pull 732373470123.dkr.ecr.us-east-1.amazonaws.com/laravel:latest &&
            sudo docker stop laravel-app || true &&
            sudo docker rm laravel-app || true &&
            sudo docker run -d --restart=always -p 9000:9000 --name laravel-app 732373470123.dkr.ecr.us-east-1.amazonaws.com/laravel:latest'